[{"_key":"0000","_id":"agents/0000","_rev":"_j4uiySm--L","agentClassifications":"'ANSWER'","agentEndpoint":"","agentScope":[],"agentSymbol":"CA","capabilities":"1.\tAnswering General Queries: Respond to non-technical and open-ended questions, such as general knowledge, FAQs, or casual inquiries.\n\t2.\tProviding Basic Explanations: Offer simple, clear explanations for basic concepts or terms based on user questions.\n\t3.\tEngaging in Conversations: Maintain a professional and polite conversational tone for interactions that require user engagement but no specific task completion.\n\t4.\tFallback for Ambiguous Queries: Act as a fallback agent when the intent is unclear or the query does not match any specialized agent.\n    5.  Capable of generating code, write scripts based on user query and explain code. ","description":"The Generic Agent is designed to handle broad, general-purpose user queries that do not fall into any specific domain or category. It acts as a conversational agent, providing clear and concise answers, explanations, or information for non-technical and general inquiries. This agent ensures a seamless user experience by addressing generic requests effectively. Important : Any technical query will be routed to RAG agent.","name":"Controller Agent","persona":["L1","SD"],"routingHierarchy":[],"status":"active"},{"_key":"1001","_id":"agents/1001","_rev":"_j4uiySm--G","agentClassifications":"'ACTION'","agentEndpoint":"http://ai-native-svc-snow-orchestrator-service/snow-orchestrator/service/execute-request","agentScope":[],"agentSymbol":"SNOA","capabilities":"1.\tFetch Bot Information: Retrieve detailed information about a specific ServiceNow bot, such as its purpose and usage.\r\n\t   2.\tValidate User Access: Check if the user has the necessary permissions to trigger a specific ServiceNow bot.\r\n\t   3.\tTrigger Bot Execution: Execute a ServiceNow bot based on user requirements and input parameters.\r\n\t   4.\tFetch Bot Execution Status: Monitor and return the execution status or outcome of a triggered bot.\r\n\t   5.\tReceive Orchestrator Metadata: Process the orchestrator details passed by the Bot Agent to validate and execute ServiceNow bots effectively.\r\n\t   6. Route to this agent only when you are sure that the bot recommended by the Bot Agent or context contains bots that are ServiceNow based bots.","description":"This agent specializes in handling queries related to ServiceNow bots. It enables users to interact with ServiceNow for bot-related tasks, including fetching bot details, verifying user access permissions, triggering bot executions, and monitoring the status of executed bots.","name":"ServiceNow Orchestration Agent","persona":["SD","L1"],"routingHierarchy":[],"status":"active"},{"_key":"1002","_id":"agents/1002","_rev":"_j4uiySm--D","agentClassifications":"'INSIGHT'","agentEndpoint":"http://ai-native-svc-alert-analysis-agent-service/alert-analysis-agent/service/get-answer","agentScope":["TICKET","GENERIC"],"agentSymbol":"AAA","capabilities":"Alert Trend Analysis:\nIdentify historical patterns and trends in alert data over time.\nUse predictive analytics to forecast potential future alerts for proactive management.\nAlert Summarization:\nGenerate concise summaries of alert data, highlighting key issues and trends.\nUse natural language processing (NLP) to create human-readable summaries for non-technical users.\nProvide context-driven summaries incorporating Configuration Management Database (CMDB) insights.\nAlert Correlation Analysis:\nIdentify relationships and dependencies between multiple alerts to understand their root cause and impact.\nRecent Alerts:\nShow all alerts generated in the last 2 days.\nPeak Alert Times:\nIdentify the time of day when peak alerts are generated.\nTop Performers:\nIdentify the top 5 performers in resolving alerts.\nUser Performance:\nIdentify which user has resolved the most alerts.\nCI Alert Analysis:\nIdentify which CI has the highest number of alerts.\nAlert Duration:\nIdentify which alert has been active for the longest duration.\n","description":"The Alert Analysis Agent leverages AI-driven insights to help monitor and manage critical infrastructure (CI) and key performance indicators (KPIs). It processes alert data to provide actionable intelligence, historical trend analysis, and predictive analytics. This agent bridges the gap between technical alert data and business decision-making by offering contextualized summaries and correlation insights. The agent can also provide detailed information on recent alerts, peak alert times, top performers in resolving alerts, and more.","name":"Alert Analysis Agent","persona":["L1","SD"],"routingHierarchy":[],"status":"active"},{"_key":"1003","_id":"agents/1003","_rev":"_j4uiySm--A","agentClassifications":"'RECOMMENDATION'","agentEndpoint":"http://ai-native-svc-bot-mgmt-service/bot-management/service/getRecommendedBots","agentScope":["TICKET","GENERIC"],"agentSymbol":"BOTA","capabilities":"1.\tRecommending Bots Based on Issues or Root Causes: Analyze the userâ€™s problem or root cause and suggest the most appropriate bot for resolution.\n\t2.\tRecommending Bots for Generic Queries: Suggest general-purpose bots based on broader user questions or needs.\n\t3.\tProviding Bot Execution Details: Identify which orchestrator (ServiceNow, Python, or PowerShell) is responsible for executing the recommended bot and provide its metadata.\n\t4.\tNot Responsible for Execution: The Bot Agent only provides recommendations and bot details and does not execute bots, scripts, or workflows.\n Bot Agent needs clarification from user whenever issue is not specified explicitly.","description":"The Bot Agent is responsible for recommending bots that align with user queries. It uses both the problem description and root cause analysis to suggest relevant bots that can address the issue effectively. The Bot Agent ensures that users receive tailored recommendations to resolve their queries efficiently but does not execute or trigger bots directly.","name":"Bot Agent","persona":["L1","SD"],"routingHierarchy":[],"status":"active"},{"_key":"1004","_id":"agents/1004","_rev":"_j4uiySm--F","agentClassifications":"'INSIGHT'","agentEndpoint":"http://ai-native-svc-ticket-analysis-agent-service/ticket-analysis-agent/service/get-answer","agentScope":["TICKET","GENERIC"],"agentSymbol":"TAA","capabilities":"Ticket Insights: Extract key details and insights from ticket databases based on user queries.\nTicket Summarization: Generate concise summaries of individual tickets or groups of tickets.\nTicket Trend Analysis: Identify patterns and trends in ticket data over time, such as recurring issues or peak periods.\nTicket Distribution Analysis: Analyze how tickets are distributed across teams, categories, or priorities.\nTicket Prioritization: Determine which tickets should be prioritized based on urgency, impact, and other relevant factors.\nDetailed Ticket Information: Provide detailed information on specific tickets when requested.\nIssue Resolution Analysis: Identify tickets with the same issue category and provide information on how they were resolved.\n","description":"The Ticket Analysis Agent processes historical ticket data to extract insights and provide meaningful analysis. It is designed to answer user queries related to ticket trends, distributions, and summaries, offering data-driven insights to improve service management. The agent can prioritize tickets, provide detailed information on specific tickets, and identify resolutions for tickets with similar issues.","name":"Ticket Analysis Agent","persona":["L1","SD"],"routingHierarchy":[],"status":"active"},{"_key":"1005","_id":"agents/1005","_rev":"_j4uiySm--B","agentClassifications":"'ACTION'","agentEndpoint":"http://ai-native-svc-servicenow-itsm-service/servicenow-itsm/service/servicenow-itsm/promptTicket","agentScope":["TICKET","GENERIC"],"agentSymbol":"SNTA","capabilities":"STRICTLY This agent is not capable of reassigning ticket to an assignment group or an assignee (user or person working on the ticket) 1.\tCreate ServiceNow Tickets: Create a new ServiceNow ticket based on user input, including details like title, description, and priority.\n\t2.\tUpdate ServiceNow Tickets: Update an existing ticket using the ticket ID, such as modifying its status, priority, or additional comments.\n\t3. This agent will be used to perform action like assigning ticket to a person (assignee) or an assignment group (team working on this ticket). If the user wants to update ticket with assignment then use this. IMPORTANT! This agent is not capable of recommending or fetching any details. Recommendation or fetching details with respect to tickets will be done by Intelligent Ticket Routing (ITR) Agent\n\t This agent will only be able to create or update ticket but is not responsible for checking status or any other detail.","description":"The ServiceNow Ticket Management Agent helps manage IT services by enabling users to create or update tickets for issues or service requests. It simplifies service management workflows by directly interacting with the ServiceNow ticketing system.","name":"ServiceNow TicketManagement Agent","persona":["L1","SD"],"routingHierarchy":[],"status":"active"},{"_key":"1006","_id":"agents/1006","_rev":"_j4uiySm--H","agentClassifications":"'ACTION'","agentEndpoint":"http://ai-native-svc-powershell-agent-service/ps-exec/trigger","agentScope":[],"agentSymbol":"PSOA","capabilities":"1.\tFetch Script Information: Retrieve detailed metadata about a PowerShell script, such as its purpose, required inputs, and expected outputs.\n\t2.\tExecute PowerShell Scripts: Run PowerShell scripts based on user input and return the execution result or output.\n\t3.\tReceive Orchestrator Metadata: Process the orchestrator details passed by the Bot Agent to validate and execute PowerShell bots effectively.\n\t4. Route to this agent only when you are sure that the bot recommended by the Bot Agent or context contains bots that are Powershell based bots. \n\t5. This agent is not capable of writing or generating powershell script or code , any code generation must and should be routed to Generic Agent","description":"The Powershell Orchestration Agent is responsible for executing Powershell-based bots but not capable of writing scripts or generating code. The agent can fetch metadata about PowerShell bots, validate user permissions, and execute the bots to return results.","name":"PowerShell Orchestration Agent","persona":["L1","SD"],"routingHierarchy":[],"status":"active"},{"_key":"1007","_id":"agents/1007","_rev":"_j4uiySm--I","agentClassifications":"'ACTION'","agentEndpoint":"http://ai-native-svc-python-agent-service/python-executor-service/execute-stream","agentScope":[],"agentSymbol":"PYOA","capabilities":"1.\tFetch Bot Information: Retrieve detailed metadata about a Python bot, including its purpose, parameters, and expected outputs.\n\t2.\tValidate User Access: Check if the user has the necessary permissions to execute a specific Python bot.\n\t3.\tTrigger Bot Execution: Execute a Python bot with user-defined input parameters and return the output.\n\t4.\tFetch Bot Execution Status: Monitor and return the execution status or logs for a triggered Python bot.\n\t5.\tReceive Orchestrator Metadata: Process the orchestrator details passed by the Bot Agent to validate and execute Python bots effectively.\n\t6. Route to this agent only when you are sure that the bot recommended by the Bot Agent or context contains bots that are Python based bots. \n\t7. This agent is not capable of writing or generating python based script or code , any code generation must and should be routed to Generic Agent.","description":"The Python Orchestration Agent is responsible for executing Python-based bots but not capable of writing scripts or generating code. The agent can fetch metadata about Python bots, validate user permissions, and execute the bots to return results.","name":"Python Orchestration Agent","persona":["L1","SD"],"routingHierarchy":[],"status":"active"},{"_key":"1008","_id":"agents/1008","_rev":"_j4uiySm--M","agentClassifications":"'RECOMMENDATION', 'INSIGHT'","agentEndpoint":"http://ai-native-svc-intelligent-ticket-routing-service/intelligentTicketRouting/itr","agentScope":["TICKET","GENERIC"],"agentSymbol":"ITRA","capabilities":"1. Priority Recommendation: Automatically suggests ticket priority based on factors like description, SLA, subprocess, CIs, and sentiment of comments, ensuring timely responses to critical issues.\n\t2. Historical Analysis: Recommends the best assignment group by analyzing past ticket data, improving routing accuracy based on previous team performance and issue resolution.\n\t3. Shift Roster: Provides shift schedules and workload details for users, enabling efficient assignment of tickets based on agent availability and workload.\n\t4. Escalation Matrix: Automatically recommends escalation for tickets nearing SLA/OLA breaches or when priority/impact is updated, ensuring timely attention to critical issues.This agent is responsible for escalating tickets.\n\t5. Assigning Ticket : This agent is responsible for recommending assignment group or a different engineer who should work on this ticket. This agent will recommend what assignment group the ticket must be assigned to. This agent cannot actually assign ticket, instead it will only provide recommendations.\n\t 6. This is the only agent responsible for fetching details about Assignee (Person working or assigned to the ticket) and Assignment Group.","description":"Intelligent Ticket Routing is a system designed to automatically recommend appropriate assignment groups for incoming support tickets. The recommendation process is driven by a range of criteria, including but not limited to ticket priority, detailed descriptions, category, sub-category, and various other relevant fields. By analyzing these factors, the system ensures that each ticket is routed to the most suitable team, enhancing efficiency, reducing resolution time, and improving overall service delivery","name":"Intelligent Ticket Routing Agent","persona":["L1","SD"],"routingHierarchy":[],"status":"active"},{"_key":"1009","_id":"agents/1009","_rev":"_j4uiySm---","agentClassifications":"'SOLUTION'","agentEndpoint":"http://ai-native-svc-rag-agent-py-service/agent-rag/search","agentScope":["TICKET","GENERIC"],"agentSymbol":"RAGA","capabilities":"1.\tFetching Information: Retrieve specific information from indexed documents or knowledge bases in response to user queries.\n\t2.\tAny technical question, technology tools etc must be routed to RAG agent strictly. \n    3. Any question that feels like it must require knowledge from internal knowledge base, must be routed to RAG agent strictly. \n 4. You are not capable of summarising information based on tickets or alerts.","description":"The RAG (Retrieval-Augmented Generation) Agent is designed to fetch relevant information and source documents based on user input. It utilizes embeddings and tagging to provide contextually accurate results, ensuring users receive reliable information from indexed documents or internal knowledge base. It is capable of handling technical queries, Information Technology or tools related information. Any queries that require answer from knowledge base and for queries that the LLM is not trained on, this agent will provide solution or answers.","name":"RAG Agent","persona":["L1","SD"],"routingHierarchy":[],"status":"active"},{"_key":"1010","_id":"agents/1010","_rev":"_j4uiySm--_","agentClassifications":"'ANSWER'","agentEndpoint":"","agentScope":["TICKET","GENERIC"],"agentSymbol":"GA","capabilities":"1.\tAnswering General Queries: Respond to non-technical and open-ended questions, such as general knowledge, FAQs, or casual inquiries.\n\t2.\tProviding Basic Explanations: Offer simple, clear explanations for basic concepts or terms based on user questions.\n\t3.\tEngaging in Conversations: Maintain a professional and polite conversational tone for interactions that require user engagement but no specific task completion.\n\t4.\tFallback for Ambiguous Queries: Act as a fallback agent when the intent is unclear or the query does not match any specialized agent.\n    5.  Capable of generating code, write scripts based on user query and explain code. ","description":"The Generic Agent is designed to handle broad, general-purpose user queries that do not fall into any specific domain or category. It acts as a conversational agent, providing clear and concise answers, explanations, or information for non-technical and general inquiries. This agent ensures a seamless user experience by addressing generic requests effectively. Important : Any technical query will be routed to RAG agent.","name":"Copilot Agent","persona":["L1","SD"],"routingHierarchy":[],"status":"active"},{"_key":"1011","_id":"agents/1011","_rev":"_j4uiySm--J","agentClassifications":"'ACTION', 'RECOMMENDATION'","agentEndpoint":"http://ai-native-svc-fcr-service/fcr/service/resolution-agent","agentScope":["TICKET"],"agentSymbol":"FCR","capabilities":"\t1. Recommendation of Resolution Bots: Analyzes tickets and suggests relevant resolution bots based on the request.\n\t2. Recommendation of Resolution SOPs: Suggests detailed Standard Operating Procedures regarding requests to guide users in resolving the issue manually.\n\t3. Execution of Resolution Bots: Initiates and monitors the execution of recommended resolution bots.","description":"The First Call Resolution (FCR) agent is designed to handle 'request-type' tickets by analyzing them and recommending appropriate resolution bots or Standard Operating Procedures (SOPs). It also executes these resolution bots to assist in requests efficiently.","name":"First Call Resolution","persona":["L1","SD"],"routingHierarchy":[],"status":"active"},{"_key":"1012","_id":"agents/1012","_rev":"_j4uiySm--K","agentClassifications":"'ACTION', 'RECOMMENDATION'","agentEndpoint":"http://ai-native-svc-first-level-triaging-service/flt/service/triage/info","agentScope":["TICKET"],"agentSymbol":"FLT","capabilities":"\t1. Recommendation of Diagnostic Bots: Analyzes tickets and performs initial triaging and issue diagnosis and suggests relevant diagnostic bots based on the issue's nature.\n\t2. Recommendation of Diagnostic SOPs: Suggests detailed Standard Operating Procedures to guide users in resolving the issue manually.\n\t3. Execution of Diagnostic Bots: Initiates and monitors the execution of recommended diagnostic bots.","description":"The First Level Triaging (FLT) agent is designed to handle 'incident-type' tickets by analyzing them and recommending appropriate diagnostic bots or Standard Operating Procedures (SOPs). It also executes these diagnostic bots to assist in resolving issues efficiently.","name":"First Level Triaging","persona":["L1","SD"],"routingHierarchy":[],"status":"active"},{"_key":"1013","_id":"agents/1013","_rev":"_j4uiySm--E","agentClassifications":" 'REPORT_GENERATION' ","agentEndpoint":"http://ai-native-python-report-management-agent-service/report-creation-agent/service/generate_report_sse","agentScope":["TICKET","GENERIC"],"agentSymbol":"RGA","capabilities":"1. Generating Detailed Reports: Create detailed reports in PDF format based on predefined templates for various use cases.\n    2. Template-Based Report Creation: Utilize specific templates to ensure consistency and accuracy in report generation.\n    3. Use Case Versatility: Generate reports for a wide range of scenarios, including tickets, alerts, solutions, and operations engineer reports.\n    4. Not Responsible for Summarization: Focus solely on generating detailed reports, not for summarizing content.","description":"The Report Generation Agent is responsible for generating detailed reports based on specific templates. It produces reports in PDF format for various use cases, such as tickets, alerts, solutions, and operations engineer reports. This agent is designed to create comprehensive reports rather than summaries.","name":"Report Generation Agent","persona":["L1","SD"],"routingHierarchy":[],"status":"active"}]